TODO-lists regarding OP-Addon:

Implementation tasks:
  - Perform DNS requests within OP-Addon to make 'echelon' possible for given
    URLs. Currently 'echelon' is working for given IPs only. 
  - This needs also integration into circuit management: If there is currently
    a circuit available fulfilling the echelon-property regarding the current 
    request, then use this circuit and do not create a new one. Else create a
    new circuit in the echelon-style.
  - Add port-history learning to StreamHandler or CircuitHandler and/or 
    port-preconfiguring to be able to configure which ports will be needed.
  - Validate any given configurations.
  - Add a convenient method of control port authentication.
  - Modify OP-Addon to _not_ measure latencies to the first hop, to make 
    one-hop.diff obsolete (would it still be useful?).
  - Modify OP-Addon to make it possible to connect to hidden services?
  - Implement new events in TorCtl.py (GUARD, DESCCHANGED, STATUS_*, ...)?

Research tasks:
  - What is a beneficial network-model and how long does it take to learn it?
  - What is a reasonable method of analyzing big amounts of generated paths to 
    empirically determine a degree of anonymity 'd' of the used method of path
    selection? 
  - Ideally this method would consider _all_ aspects that somehow influence
    anonymity of users. Collect these!
