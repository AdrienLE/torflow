diff -ur tor-0.1.2.7-alpha/src/or/connection.c tor-0.1.2.7-mine/src/or/connection.c
--- tor-0.1.2.7-alpha/src/or/connection.c	2007-02-05 14:52:29.000000000 -0600
+++ tor-0.1.2.7-mine/src/or/connection.c	2007-02-18 17:07:11.000000000 -0600
@@ -1578,10 +1578,18 @@
     if (n_read > 0) {
       rep_hist_note_bytes_read(n_read, now);
       connection_read_bucket_decrement(conn, n_read);
+      conn->bytes_read += n_read;
+      if(connection_speaks_cells(conn))
+          control_event_or_conn_status(TO_OR_CONN(conn), OR_CONN_EVENT_READ, 
+                  n_read);
     }
     if (n_written > 0) {
       rep_hist_note_bytes_written(n_written, now);
       global_write_bucket -= n_written;
+      conn->bytes_written += n_written;
+      if(connection_speaks_cells(conn))
+          control_event_or_conn_status(TO_OR_CONN(conn), OR_CONN_EVENT_WRITE, 
+                  n_written);
     }
   }
 
@@ -1774,10 +1782,18 @@
     if (n_written > 0) {
       rep_hist_note_bytes_written(n_written, now);
       global_write_bucket -= n_written;
+      conn->bytes_written += n_written;
+      if(connection_speaks_cells(conn))
+          control_event_or_conn_status(TO_OR_CONN(conn), OR_CONN_EVENT_WRITE, 
+                  n_written);
     }
     if (n_read > 0) {
       rep_hist_note_bytes_read(n_read, now);
       connection_read_bucket_decrement(conn, n_read);
+      conn->bytes_read += n_read;
+      if(connection_speaks_cells(conn))
+          control_event_or_conn_status(TO_OR_CONN(conn), OR_CONN_EVENT_READ, 
+                  n_read);
     }
   }
 
diff -ur tor-0.1.2.7-alpha/src/or/control.c tor-0.1.2.7-mine/src/or/control.c
--- tor-0.1.2.7-alpha/src/or/control.c	2007-02-05 20:49:17.000000000 -0600
+++ tor-0.1.2.7-mine/src/or/control.c	2007-02-18 17:39:31.000000000 -0600
@@ -3301,21 +3301,21 @@
 {
   switch (r) {
     case END_OR_CONN_REASON_DONE:
-      return "REASON=DONE";
+      return " REASON=DONE";
     case END_OR_CONN_REASON_TCP_REFUSED:
-      return "REASON=CONNECTREFUSED";
+      return " REASON=CONNECTREFUSED";
     case END_OR_CONN_REASON_OR_IDENTITY:
-      return "REASON=IDENTITY";
+      return " REASON=IDENTITY";
     case END_OR_CONN_REASON_TLS_CONNRESET:
-      return "REASON=CONNECTRESET";
+      return " REASON=CONNECTRESET";
     case END_OR_CONN_REASON_TLS_TIMEOUT:
-      return "REASON=TIMEOUT";
+      return " REASON=TIMEOUT";
     case END_OR_CONN_REASON_TLS_NO_ROUTE:
-      return "REASON=NOROUTE";
+      return " REASON=NOROUTE";
     case END_OR_CONN_REASON_TLS_IO_ERROR:
-      return "REASON=IOERROR";
+      return " REASON=IOERROR";
     case END_OR_CONN_REASON_TLS_MISC:
-      return "REASON=MISC";
+      return " REASON=MISC";
     case 0:
       return "";
     default:
@@ -3346,6 +3346,9 @@
     const char *status;
     char name[128];
     char ncircs_buf[32] = {0}; /* > 8 + log10(2^32)=10 + 2 */
+    char age_buf[32] = {0}; /* > 8 + log10(2^32)=10 + 2 */
+    char read_buf[42] = {0}; /* > 8 + log10(2^64)=20 + 2 */
+    char wrote_buf[42] = {0}; /* > 8 + log10(2^64)=20 + 2 */
     switch (tp)
       {
       case OR_CONN_EVENT_LAUNCHED: status = "LAUNCHED"; break;
@@ -3353,31 +3356,48 @@
       case OR_CONN_EVENT_FAILED: status = "FAILED"; break;
       case OR_CONN_EVENT_CLOSED: status = "CLOSED"; break;
       case OR_CONN_EVENT_NEW: status = "NEW"; break;
+      case OR_CONN_EVENT_READ: status = "READ"; break;
+      case OR_CONN_EVENT_WRITE: status = "WRITE"; break;
       default:
         log_warn(LD_BUG, "Unrecognized status code %d", (int)tp);
         return 0;
       }
     ncircs = circuit_count_pending_on_or_conn(conn);
     ncircs += conn->n_circuits;
-    if (ncircs && (tp == OR_CONN_EVENT_FAILED || tp == OR_CONN_EVENT_CLOSED)) {
-        tor_snprintf(ncircs_buf, sizeof(ncircs_buf), "%sNCIRCS=%d",
-                reason ? " " : "", ncircs);
+    if(tp == OR_CONN_EVENT_READ) {
+      tor_snprintf(read_buf, sizeof(read_buf), "READ=%d", reason);
+      reason = 0;
     }
-
-    if (EVENT_IS_INTERESTING1S(EVENT_OR_CONN_STATUS)) {
-      orconn_target_get_name(0, name, sizeof(name), conn);
-      send_control1_event_extended(EVENT_OR_CONN_STATUS, SHORT_NAMES,
-                          "650 ORCONN %s %s@%s%s\r\n",
-                          name, status,
-                          or_conn_end_reason_to_string(reason), ncircs_buf);
+    if(tp == OR_CONN_EVENT_WRITE) {
+      tor_snprintf(wrote_buf, sizeof(wrote_buf), "WRITTEN=%d", reason);
+      reason = 0;
     }
-    if (EVENT_IS_INTERESTING1L(EVENT_OR_CONN_STATUS)) {
-      orconn_target_get_name(1, name, sizeof(name), conn);
-      send_control1_event_extended(EVENT_OR_CONN_STATUS, LONG_NAMES,
-                          "650 ORCONN %s %s@%s%s\r\n",
-                          name, status,
-                          or_conn_end_reason_to_string(reason), ncircs_buf);
+
+    if (tp == OR_CONN_EVENT_FAILED || tp == OR_CONN_EVENT_CLOSED) {
+      tor_snprintf(age_buf, sizeof(age_buf), "AGE=%d",
+              (int)(time(NULL) - conn->_base.timestamp_created));
+      tor_snprintf(read_buf, sizeof(read_buf), " READ=%Zu",
+                conn->_base.bytes_read);
+      tor_snprintf(wrote_buf, sizeof(wrote_buf), " WRITTEN=%Zu",
+                conn->_base.bytes_written);
+      if (ncircs)
+        tor_snprintf(ncircs_buf, sizeof(ncircs_buf), " NCIRCS=%d", ncircs);
     }
+
+      if (EVENT_IS_INTERESTING1S(EVENT_OR_CONN_STATUS)) {
+        orconn_target_get_name(0, name, sizeof(name), conn);
+        send_control1_event_extended(EVENT_OR_CONN_STATUS, SHORT_NAMES,
+              "650 ORCONN %s %s@%s%s%s%s%s\r\n",
+              name, status, age_buf, read_buf, wrote_buf,
+              or_conn_end_reason_to_string(reason), ncircs_buf);
+      }
+      if (EVENT_IS_INTERESTING1L(EVENT_OR_CONN_STATUS)) {
+        orconn_target_get_name(1, name, sizeof(name), conn);
+        send_control1_event_extended(EVENT_OR_CONN_STATUS, LONG_NAMES,
+              "650 ORCONN %s %s@%s%s%s%s%s\r\n",
+              name, status, age_buf, read_buf, wrote_buf,
+              or_conn_end_reason_to_string(reason), ncircs_buf);
+      }
   }
   return 0;
 }
diff -ur tor-0.1.2.7-alpha/src/or/or.h tor-0.1.2.7-mine/src/or/or.h
--- tor-0.1.2.7-alpha/src/or/or.h	2007-02-06 23:31:15.000000000 -0600
+++ tor-0.1.2.7-mine/src/or/or.h	2007-02-18 17:07:11.000000000 -0600
@@ -743,6 +743,8 @@
                                  * could write? */
   time_t timestamp_created; /**< When was this connection_t created? */
 
+  size_t bytes_read; /**< Total number of bytes read off this connection */
+  size_t bytes_written; /**< Total number of bytes written to this connection*/
   uint32_t addr; /**< IP of the other side of the connection; used to identify
                   * routers, along with port. */
   uint16_t port; /**< If non-zero, port  on the other end
@@ -2282,6 +2284,8 @@
   OR_CONN_EVENT_FAILED       = 2,
   OR_CONN_EVENT_CLOSED       = 3,
   OR_CONN_EVENT_NEW          = 4,
+  OR_CONN_EVENT_READ         = 5,
+  OR_CONN_EVENT_WRITE         = 6
 } or_conn_status_event_t;
 
 void control_update_global_event_mask(void);
